var _st =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _cart = __webpack_require__(1);

var _cart2 = _interopRequireDefault(_cart);

var _checkout = __webpack_require__(2);

var _checkout2 = _interopRequireDefault(_checkout);

var _config = __webpack_require__(3);

var _config2 = _interopRequireDefault(_config);

var _form = __webpack_require__(4);

var _form2 = _interopRequireDefault(_form);

var _modal = __webpack_require__(5);

var _modal2 = _interopRequireDefault(_modal);

var _mu = __webpack_require__(6);

var _mu2 = _interopRequireDefault(_mu);

var _functions = __webpack_require__(7);

var func = _interopRequireWildcard(_functions);

__webpack_require__(14);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var STTV = function () {
	function STTV() {
		_classCallCheck(this, STTV);

		this.stripe = _config2.default[_config2.default.env].stripe;
		this.root = 'http://localhost:8888/sttvroot';
		this.resources = {
			api: 'https://api.supertutortv.com/v2',
			app: 'https://courses.supertutortv.com',
			content: this.root + '/wp-content/themes/sttvsite'
		};
		this.cart = _cart2.default, this.checkout = _checkout2.default, this.form = _form2.default, this.modal = _modal2.default, this.mu = _mu2.default;
	}

	_createClass(STTV, [{
		key: 'analytics',
		value: function analytics(obj) {
			return func.analytics.call(this, obj);
		}
	}, {
		key: 'dismiss',
		value: function dismiss(cb) {
			return func.dismiss.call(this, cb);
		}
	}, {
		key: 'menuToggle',
		value: function menuToggle(cb) {
			return func.menuToggle.call(this, cb);
		}
	}, {
		key: 'parseParams',
		value: function parseParams(str, regex) {
			return func.parseParams.call(this, str, regex);
		}
	}, {
		key: 'request',
		value: function request(obj) {
			return func.request.call(this, obj);
		}
	}, {
		key: 'scroll',
		value: function scroll(a) {
			return func.scroll.call(this, a);
		}
	}]);

	return STTV;
}();

module.exports = new STTV();

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var cart = function () {

  var cartObj = JSON.parse(localStorage.getItem('_stcart_'));
  var initDate = Date.now();
  if (cartObj === null || (cartObj.ID / 1000 | 0) + 86400 < initDate / 1000 | 0) {
    cartObj = {
      ID: initDate,
      signature: btoa(navigator.userAgent + '|' + navigator.platform + '|' + navigator.product).replace(/=/g, ''),
      items: {}
    };
  }

  for (var key in cartObj.items) {
    var obj = cartObj.items[key];
    if (obj.type === 'multi-user') {
      delete cartObj.items[key];
    }
  }

  var currentCount = Object.keys(cartObj.items).length;

  var fabWrap = $('<div/>', { id: 'cart-FAB' }),
      fab = $('<a/>', { "class": 'cart-fab btn-floating btn-large z-depth-5' }),
      fabCon = $('<i/>', { "class": 'material-icons', text: 'shopping_cart' }),
      fabAlert = $('<div/>', { "class": 'cart-alert circle z-depth-2' });

  $('body').addClass('sttv-jscart');

  fabWrap.append(fabAlert.text(currentCount)).append(fab.append(fabCon)).appendTo(document.body);

  if (currentCount > 0) {
    fabAlert.addClass('show').siblings('.cart-fab').addClass('pulse');
  }

  localStorage.setItem('_stcart_', JSON.stringify(cartObj));

  return {
    cartObj: cartObj,
    changed: [],
    add: function add(item, skipUpdate) {
      skipUpdate = skipUpdate || false;
      if ((typeof item === 'undefined' ? 'undefined' : _typeof(item)) !== 'object') {
        throw 'Item must be an object';
      }
      var cart = this.cartObj.items,
          msg = '';

      if (typeof cart[item.id] === 'undefined') {
        cart[item.id] = item;
        msg = 'Item added';
      } else {
        if (item.type !== 'subscription') {
          cart[item.id].qty += item.qty;
          msg = 'Quantity updated';
        }
      }

      this.changed.push(item.id);
      this.save(skipUpdate);

      _st.analytics({
        type: 'ec:addProduct',
        data: {
          'id': item.id,
          'name': item.name,
          'brand': 'SupertutorTV',
          'category': item.type,
          'quantity': item.qty,
          'price': (item.price / 100).toFixed(2)
        }
      });
      _st.analytics({
        type: 'ec:setAction',
        action: 'add'
      });
      return msg;
    },
    remove: function remove(item, skipUpdate) {
      skipUpdate = skipUpdate || false;
      if (typeof item !== 'string') {
        return false;
      }
      delete this.cartObj.items[item];
      return this.save(skipUpdate);
    },
    empty: function empty(cb) {
      this.cartObj.items = {};
      this.save();
      return typeof cb === 'function' && cb(this);
    },
    unset: function unset(cb) {
      localStorage.removeItem('_stcart_');
      return typeof cb === 'function' && cb(this);
    },
    save: function save(skip) {
      localStorage.setItem('_stcart_', JSON.stringify(this.cartObj));
      return !skip && this.notifications.update();
    },
    get: function get() {
      return this.cartObj.items;
    },
    notifications: {
      count: currentCount,
      element: fabAlert,
      update: function update() {
        this.count = Object.keys(_st.cart.cartObj.items).length;
        if (this.count <= 0) {
          $('.cart-alert').removeClass('show').siblings('.cart-fab').removeClass('pulse');
        } else {
          $('.cart-alert').addClass('show').siblings('.cart-fab').addClass('pulse');
        }
        $('.cart-alert').text(this.count);
        return this.count;
      }
    },
    submit: function submit(init, el) {
      var data = {
        init: init || false,
        cart: this.get()
      };

      _st.analytics({
        type: 'ec:setAction',
        action: 'click',
        pageview: true
      });

      _st.request({
        route: '/checkout',
        method: 'POST',
        cdata: data,
        success: function success(d) {
          _st.checkout = 'subscription';
          el.append(d.html);
          _st.modal.loader();

          for (var itemID in data.cart) {
            var item = data.cart[itemID];
            _st.analytics({
              type: 'ec:addProduct',
              data: {
                'id': item.id,
                'name': item.name,
                'brand': 'SupertutorTV',
                'category': item.type,
                'quantity': item.qty,
                'price': (item.price / 100).toFixed(2)
              }
            });
          }
          _st.analytics({
            type: 'ec:setAction',
            action: 'checkout',
            data: {
              'step': 1
            },
            pageview: true,
            page: '/checkout'
          });
        },
        error: function error(x) {
          console.log(x);
          var d = x[0].responseJSON;

          //$('.message',el).text(d.message)
          _st.modal.toggle(function () {
            _st.modal.loader();
          });
        }
      });
    }
  };
}();

exports.default = cart;

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/* Let's define the checkout object with methods and properties */
var Checkout = function () {
	function Checkout() {
		_classCallCheck(this, Checkout);

		Object.assign(this, {
			valid: false,
			card: false,
			reset: null,
			index: 0,
			state: {
				items: [],
				total: 0,
				tax: 0,
				taxable: 0,
				shipping: 0,
				disc: 0,
				discp: 0,
				coupon: '',
				trial: 0,
				customer: {
					token: ''
				}
			},
			html: [],
			table: []
		});
	}

	_createClass(Checkout, [{
		key: 'init',
		value: function init(cb) {
			var t = this;
			_st.request({
				route: '/checkout?pricing=C3500',
				success: function success(data) {
					console.log(data);
					t.html = data.data.html;
					t.state.items.push(data.data.pricing);
					t.state.trial = data.data.pricing.trial_period;
					t.update();
					typeof cb === 'function' && cb(t);
				},
				error: function error(err) {
					console.log(err);
				}
			});
		}
	}, {
		key: 'next',
		value: function next() {
			if (this.index < 4) {
				var pane = $('#pane-' + this.index),
				    inputs = $('input,select', pane),
				    t = this;
				return this.validate(inputs, function (inp) {
					t.update(inp.serializeArray());
					t.html[t.index] = pane;
					t.index++;
					t.render();
				});
			}
		}
	}, {
		key: 'prev',
		value: function prev() {
			if (this.index > 1) {
				var pane = $('#pane-' + this.index),
				    inputs = $('input,select', pane);
				this.update(inputs.serializeArray());
				this.html[this.index] = pane;
				this.index--;
				this.render();
			}
		}
	}, {
		key: 'render',
		value: function render(el) {
			var t = this;
			if (t.index === 0) {
				/* t.html.forEach(function(l,i){
    	if (typeof l !== 'string' || l === '') return
    	
    	t.html[i] = l.replace(/({{)(.*)(}})/g,(match,p1,p2,p3) => {
    		return t.totals[p2]
    	})
    	}) */
				t.index++;
			}

			if (typeof el !== 'undefined') {
				var wrapper = $('<div id="st-checkout-wrapper" class="col s12"></div>');
				wrapper.html(t.html[t.index]);
				wrapper.appendTo(el);
			} else {
				var wrapper = $('#st-checkout-wrapper');
				wrapper.empty().append(t.html[t.index]);
			}

			this.renderItemsTable();

			$('.st-checkout-pane').removeClass('active');
			setTimeout(function () {
				setTimeout(function () {
					$('#pane-' + t.index).addClass('active');
				}, 100);
			}, 100);
		}
	}, {
		key: 'renderItemsTable',
		value: function renderItemsTable() {
			var t = this;
			$('.items-row').fadeOut(100, function () {
				var that = $(this);
				that.empty();

				t.table.forEach(function (row) {
					that.append($(row));
				});

				$('#ttltxt>span').text(t.pricer(t.state.total));
			}).fadeIn(100);
		}
	}, {
		key: 'setIndex',
		value: function setIndex(itm, ind, val) {
			if (typeof ind == 'string') return this.setIndex(itm, ind.split('-'), val);else if (ind.length == 1 && val !== undefined) return itm[ind[0]] = val;else if (ind.length == 0) return itm;else if (typeof itm[ind[0]] == 'undefined') itm[ind[0]] = {};
			return this.setIndex(itm[ind[0]], ind.slice(1), val);
		}
	}, {
		key: 'setState',
		value: function setState(obj) {
			var t = this;
			if (typeof obj !== 'undefined') {
				obj.forEach(function (val) {
					val.name = val.name.replace('st-', '');
					t.setIndex(t.state, val.name.split('-'), val.value);
				});
			}
			return this;
		}
	}, {
		key: 'setShipping',
		value: function setShipping() {
			this.state.shipping = 705;
			this.update();
			return this;
		}
	}, {
		key: 'pricer',
		value: function pricer(price) {
			return (Math.round(price) / 100).toFixed(2);
		}
	}, {
		key: 'update',
		value: function update(obj) {
			if (typeof obj !== 'undefined') this.setState(obj);
			var state = this.state,
			    t = this;
			state.total = state.taxable = 0;
			t.table = [];

			for (var i = 0; i < state.items.length; i++) {
				var item = state.items[i];
				state.total += item.price;
				state.taxable += item.taxable_amt;
				t.table.push('<div class="row"><div class="col s2">' + item.qty + '</div><div class="col s8">' + item.name + '</div><div class="col s2 right-align">' + t.pricer(item.price) + '</div></div>');
			}

			if (0 < state.disc) {
				var discprice = state.disc;
			} else if (0 < state.discp) {
				var discprice = state.total * (state.discp / 100);
			}

			if (0 < state.disc || 0 < state.discp) {
				state.total -= discprice;
				t.table.push('<div class="row"><div class="col s2"></div><div class="col s8">Discount (' + state.coupon + ')</div><div class="col s2 right-align">-' + t.pricer(discprice) + '</div></div>');
			}

			if (state.tax > 0) {
				var taxxx = state.taxable * state.tax / 100;
				state.total += taxxx;
				t.table.push('<div class="row"><div class="col s2"></div><div class="col s8">' + state.taxmsg + '</div><div class="col s2 right-align">+' + t.pricer(taxxx) + '</div></div>');
			}

			if (state.shipping > 0) {
				state.total += state.shipping;
				t.table.push('<div class="row"><div class="col s2"></div><div class="col s8">Priority Shipping</div><div class="col s2 right-align">+' + t.pricer(state.shipping) + '</div></div>');
			}
		}
	}, {
		key: 'setOutcome',
		value: function setOutcome(result, con) {
			if (typeof result.error !== 'undefined') {
				$('.error', con).text(result.error.message);
			} else {
				$('.error', con).text('');
			}

			var inputs = $('input, select', con);
			_st.checkout.validate(inputs, con, result.complete);
		}
	}, {
		key: 'setup',
		value: function setup() {
			var stripe = Stripe(_st.stripe.publicKey);
			var elements = stripe.elements();
			var card = elements.create('card', {
				hidePostalCode: true
			});
			card.mount('#st-checkout-card-element');

			card.on('change', function (event) {
				this.setOutcome(event, '#checkout-wrapper');
			});
			this.card = true;
			/* 
   this.update() */
		}
	}, {
		key: 'submit',
		value: function submit(data) {
			_st.modal.loader(function () {
				var mo = $('#modal_loading_overlay');

				mo.find('*').not('img').remove();

				mo.append('<h2 style="margin-top:4em">Authorizing card...</h2>').append('<span>(Patience, young padawan... This will take a moment.)</span>');
			});
			var det = {
				name: data.cardname,
				address_line1: data.billing_address1,
				address_line2: data.billing_address2,
				address_city: data.billing_city,
				address_state: data.billing_state,
				address_zip: data.billing_pcode,
				address_country: data.billing_country
			};

			stripe.createToken(card, det).then(function (result) {
				if (result.error) {
					console.log(result.error);
					return _st.modal.loader(function (el) {
						$('.error', el).text(result.error.message);
					});
				} else {
					$('#modal_loading_overlay h2').text('Processing order...');
					data.token = result.token;
					data.cart = _st.cart.cartObj;

					_st.request({
						route: '/checkout',
						method: 'POST',
						cdata: data,
						success: function success(d) {
							console.log(d);

							if ('error' === d.code) {
								var ecode = d.error.decline_code || d.error.code;
								_st.modal.loader(function (el) {
									$('p.error', el).html('<span class="col s12">We\'re sorry. ' + d.error.message + '</span><span class="col s12">err code: ' + ecode + '</span>');
								});
							} else if ('success' === d.code) {
								var success = $('<div/>', {
									id: 'success',
									'class': 'col s12'
								}).append('<h2><i class="material-icons">done</i></h2><br/><span>' + d.message + '</span>');

								$('#modal_loading_overlay').empty().append(success);

								var lines = d.order.invoice.data[0].lines.data,
								    tax = shipping = '0',
								    coupon = d.order.invoice.data[0].discount || '';

								for (var i = 0, len = lines.length; i < len; i++) {
									var line = lines[i];

									if (line.description === 'Sales tax') {
										tax = (line.amount / 100).toFixed(2);
									} else if (line.description === 'Priority Shipping') {
										shipping = (line.amount / 100).toFixed(2);
									}
								}

								_st.analytics({
									type: 'ec:setAction',
									action: 'purchase',
									data: {
										'id': d.cart.ID,
										'revenue': (d.order.invoice.data[0].amount_paid / 100).toFixed(2),
										'tax': tax,
										'shipping': shipping,
										'coupon': coupon,
										'affiliation': 'SupertutorTV Online Store'
									},
									pageview: true,
									page: '/checkout'
								});

								_st.cart.unset();

								setTimeout(function () {
									window.location.href = d.order.redirect;
								}, 3000);
							}
						},
						error: function error(x) {
							var d = x[0].responseJSON;
							console.log(x, d);
						}
					});
				}
			});
		}
	}, {
		key: 'validate',
		value: function validate(inputs, cb) {
			this.valid = false;
			var context = '#st-modal-inner',
			    that = this,
			    inp = inputs.toArray(),
			    msg = ' is invalid';
			inp.some(function (v, i) {
				var t = $(v);
				if (t.is(':required') && (!t.val() || t.hasClass('invalid'))) {
					if (!t.val()) msg = t.attr('placeholder') + ' is required';
					t.addClass('invalid');
					return true;
				} else if (t.hasClass('invalid')) {
					msg = t.attr('placeholder') + msg;
					return true;
				}
				if (i === inp.length - 1) that.valid = true;
				return false;
			});

			if (!this.valid) {
				$('p.error', context).text(msg);
				return this.valid;
			}

			$('p.error', context).text('');
			$('.st-checkout-submit', context).prop('disabled', !this.valid);
			typeof cb === 'function' && cb(inputs);
		}
	}]);

	return Checkout;
}();

exports.default = Checkout;

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
var config = {
    env: 'staging',
    production: {
        stripe: {
            publicKey: 'pk_live_ns71ckv2wHyLaP7CCyxp3DS7'
        }
    },
    staging: {
        stripe: {
            publicKey: 'pk_test_aF7R0He4Yt4OYgAq3iERimgn'
        }
    },
    development: {
        stripe: {
            publicKey: 'pk_test_aF7R0He4Yt4OYgAq3iERimgn'
        }
    }
};

exports.default = config;

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var form = {
  valid: false,
  disableForm: function disableForm(c) {
    $('.signup-submit', c).prop('disabled', !this.valid);
  },
  validate: function validate(con) {
    var inputs = $('input,select', con);
    inputs.each(function (k, v) {
      if ($(this).is(':required') && ($(this).val() && !$(this).hasClass('invalid') || $(this).hasClass('valid'))) {
        _st.form.valid = true;
      } else {
        _st.form.valid = false;
        _st.form.disableForm(con);
        return false;
      }
    });
    this.disableForm(con);
  }
};

exports.default = form;

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Modal = function () {
  function Modal() {
    _classCallCheck(this, Modal);

    this.action = '', this.element = $('#st-modal-inner-content');
    this.inner = $('#st-modal-inner-content-inner');
  }

  _createClass(Modal, [{
    key: 'init',
    value: function init(act) {
      var t = this;
      if (typeof act === 'undefined') return false;
      if (t.action === act) return t.toggle();

      var cb;
      if (act !== 'close') {
        t.action = act;
        t.loader(function () {
          t.inner.empty();
          t.element.removeClass('st-quiet-load');
        });
      }

      switch (act) {
        case 'close':
          cb = function cb() {
            setTimeout(function () {
              $('#st-modal').hide();
            }, 250);
          };
          break;
        case 'login':
          cb = function cb(el) {
            _st.login(el);
          };
          break;
        case 'mu-checkout':
          cb = function cb(el) {
            _st.mu.submit(el, '#mu_form_wrapper');
          };
          break;
        case 'mu-signup':
          cb = function cb(el) {
            _st.mu.register(el, '#mu_form_wrapper');
          };
          break;
        case 'sttv-cart':
        case 'checkout':
          cb = function cb(el) {
            _st.checkout = new _st.checkout();
            _st.checkout.init(function (x) {
              x.render(el);
              t.loader();
            });
          };
          break;
      }
      t.toggle(cb);
    }
  }, {
    key: 'toggle',
    value: function toggle(cb) {
      $('#st-modal').show();
      $('body').toggleClass('modal-open');
      typeof cb === 'function' && cb(this.inner);
    }
  }, {
    key: 'loader',
    value: function loader(cb) {
      this.element.toggleClass('loader-active');
      typeof cb === 'function' && cb(this.inner);
    }
  }]);

  return Modal;
}();

exports.default = new Modal();

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var mu = {
  submit: function submit(el, con) {
    var data = {
      mukey: $('input[name=mukey]', con).val(),
      email: $('input[name=email]', con).val(),
      license: {
        id: $('select[name=sttv_course_id]', con).val(),
        title: $('select[name=sttv_course_id] option:selected', con).text(),
        qty: $('select[name=qty]', con).val()
      }
    },
        type = 'multi-user';

    _st.request({
      route: '/multi-user',
      method: 'POST',
      cdata: data,
      success: function success(d) {
        _st.checkout = type;
        _st.cart.empty(function (t) {
          t.add(d.data, true);
        });
        el.append(d.html);
        _st.modal.loader();
        console.log(d);
      },
      error: function error(x) {
        var d = x[0].responseJSON;

        $('.message', con).text(d.message);
        _st.modal.toggle(function () {
          _st.modal.loader();
        });
        console.log(d);
      }
    });
  },
  register: function register(el, con) {

    var data = {
      muid: $('input[name=mukey]', con).val(),
      email: $('input[name=sttv_email]', con).val(),
      password: $('input[name=sttv_password]', con).val(),
      firstName: $('input[name=sttv_firstname]', con).val(),
      lastName: $('input[name=sttv_lastname]', con).val()
    };

    _st.request({
      route: '/checkout',
      method: 'POST',
      cdata: data,
      success: function success(d) {
        el.append(d.html);
        _st.modal.loader();
        setTimeout(function () {
          window.location.href = d.data.redirect;
        }, 2000);
        console.log(d);
      },
      error: function error(x) {
        console.log(x);
        var d = x[0].responseJSON;

        $('.message', con).text(d.message);
        _st.modal.toggle(function () {
          _st.modal.loader();
        });
      }
    });
  }
};

exports.default = mu;

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.scroll = exports.dismiss = exports.menuToggle = exports.parseParams = exports.request = exports.analytics = undefined;

var _analytics = __webpack_require__(8);

var _analytics2 = _interopRequireDefault(_analytics);

var _request = __webpack_require__(9);

var _request2 = _interopRequireDefault(_request);

var _parseParams = __webpack_require__(10);

var _parseParams2 = _interopRequireDefault(_parseParams);

var _menuToggle = __webpack_require__(11);

var _menuToggle2 = _interopRequireDefault(_menuToggle);

var _dismiss = __webpack_require__(12);

var _dismiss2 = _interopRequireDefault(_dismiss);

var _scroll = __webpack_require__(13);

var _scroll2 = _interopRequireDefault(_scroll);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.analytics = _analytics2.default;
exports.request = _request2.default;
exports.parseParams = _parseParams2.default;
exports.menuToggle = _menuToggle2.default;
exports.dismiss = _dismiss2.default;
exports.scroll = _scroll2.default;

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var analytics = function analytics(obj) {
  if (typeof obj === 'undefined') {
    return false;
  }

  var page = obj.page || false,
      pageview = obj.pageview || false,
      event = obj.event || false,
      action = obj.action || obj.data,
      data = obj.data || false;

  if (typeof action === 'string' && (typeof data === 'undefined' ? 'undefined' : _typeof(data)) === 'object') {
    //console.log( "ga( "+obj.type+", "+action+", "+data+" )" )
    ga(obj.type, action, data);
  } else if (typeof obj.type !== 'undefined') {
    //console.log( "ga( "+obj.type+", "+action+" )" )
    ga(obj.type, action);
  }

  if (event) {
    //console.log( "ga( 'send', 'event', "+event+" )" )
    ga('send', 'event', event.name);
  }

  return pageview ? page ? ga('send', 'pageview', page) : ga('send', 'pageview') : pageview;
};

exports.default = analytics;

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var request = function request(obj) {
  var ajaxp = {
    url: _st.resources.api + obj.route,
    method: obj.method || 'GET',
    headers: obj.headers || {},
    processData: false,
    dataType: obj.dataType || 'json',
    success: function success(data) {
      typeof obj.success !== 'undefined' && obj.success(data);
    },
    error: function error(x, s, r) {
      typeof obj.error !== 'undefined' && obj.error([x, s, r]);
    }
  };
  if (ajaxp.method !== 'GET') {
    ajaxp['data'] = JSON.stringify(obj.cdata || {});
  }
  if (typeof obj.accepts !== 'undefined') {
    ajaxp['accepts'] = obj.accepts;
  }
  $.ajax(ajaxp);
};

exports.default = request;

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
var parseParams = function parseParams(str, regex) {
    return (str || document.location.search).replace(/(^\?)/, '').replace(regex, '').split("&").map(function (n) {
        return n = n.split("="), this[n[0]] = n[1], this;
    }.bind({}))[0];
};
exports.default = parseParams;

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
var menuToggle = function menuToggle(cb) {
    $('body').toggleClass('nav-sidebar-open');
    typeof cb === 'function' && cb();
};
exports.default = menuToggle;

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
var dismiss = function dismiss(cb) {
    document.querySelector('body').classList.remove('nav-sidebar-open', 'modal-open');
    typeof cb === 'function' && cb();
};
exports.default = dismiss;

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var scroll = function scroll(a) {
  a = a || 'footer';
  $('html, body').stop().animate({
    scrollTop: $(a).offset().top - 100
  }, 1250, "swing");
};
exports.default = scroll;

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _jquery = __webpack_require__(15);

var _jquery2 = _interopRequireDefault(_jquery);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _jquery2.default)(document).ready(function () {
    //$('#st-modal-overlay').css('background-image', 'url(' + _st.resources.content + '/i/sttv-loader-rings.gif)')
});

// BEGIN Checkout form handlers //
(0, _jquery2.default)(document).on('change', 'input[name="st-customer-shipping-copy-billing"]', function () {
    if ((0, _jquery2.default)(this).is(":checked")) {
        var billing = _st.checkout.state.customer.billing;
        (0, _jquery2.default)('input.shipping, select.shipping').each(function () {
            var classes = this.className.split(/\s+/),
                el = (0, _jquery2.default)(this);
            classes.some(function (a) {
                return billing[a] && el.val(billing[a]);
            });
        });
    } else {
        (0, _jquery2.default)("input.shipping").each(function () {
            (0, _jquery2.default)(this).val('');
        });
        (0, _jquery2.default)("select.shipping").prop("selectedIndex", -1);
    }
    (0, _jquery2.default)('input, select', '#st-checkout-shipping').blur();
});

(0, _jquery2.default)(document).on('change', '[name="st-customer-shipping-priority"]', function (e) {
    e.preventDefault();
    _st.checkout.setShipping();
});

(0, _jquery2.default)('[name=sttv_billing_pcode]').on({
    focusin: function focusin() {
        (0, _jquery2.default)(this).data('val', (0, _jquery2.default)(this).val());
    },
    change: function change(e) {
        e.preventDefault();
        var val = (0, _jquery2.default)(this).val();
        if ((0, _jquery2.default)(this).data('val') === val) {
            return false;
        } else if (!val) {
            return _st.checkout.update({
                tax: {
                    rate: 0
                }
            });
        }

        _st.request({
            route: '/checkout?zip=' + val,
            success: function success(d) {
                _st.checkout.update({
                    tax: {
                        rate: d.tax,
                        msg: d.message
                    }
                });
            },
            error: function error(x) {
                console.log(x);
            }
        });
    }
});

(0, _jquery2.default)('[name=sttv_email],input[name=sttv_coupon]').on({
    focusout: function focusout(e) {
        if (!(0, _jquery2.default)(this).val()) {
            tThis.removeClass('valid invalid');
        }
    },
    change: function change(e) {
        e.preventDefault();
        var tThis = (0, _jquery2.default)(this),
            val = tThis.val(),
            qstring = '';

        switch (tThis.attr('name')) {
            case 'sttv_coupon':
                if (!val) {
                    _st.checkout.update({
                        disc: 0,
                        discp: 0
                    });
                    return false;
                }
                qstring = 'coupon=';
                break;
            case 'sttv_email':
                if (!val) {
                    return false;
                }
                qstring = 'email=';
                break;
            default:
                return false;
        }

        _st.request({
            route: '/checkout?' + qstring + val,
            success: function success(d) {
                tThis.removeClass('valid invalid');
                console.log(d);

                var msg = {},
                    cls = '';

                switch (d.code) {
                    case 'coupon_valid':
                    case 'email_available':
                        cls = 'valid';
                        msg = { 'data-success': d.message };
                        break;
                    case 'coupon_invalid':
                        cls = 'invalid';
                        msg = { 'data-error': d.error.message };
                        break;
                    case 'coupon_expired':
                    case 'email_taken':
                        cls = 'invalid';
                        msg = { 'data-error': d.message };
                        break;
                }

                tThis.addClass(cls).siblings('label').attr(msg);

                _st.checkout.update({
                    discp: d.percent_off,
                    disc: d.amount_off,
                    coupon: d.id
                });
            },
            error: function error(x) {
                console.log(x);
            }
        });
    }
});

(0, _jquery2.default)('.signup-submit').on('click', function (e) {
    e.preventDefault();
    var inputs = (0, _jquery2.default)('input, select', '#checkout-wrapper'),
        valid = _st.checkout.validate(inputs, '#checkout-wrapper');
    if (valid) {
        _st.checkout.submit(_st.parseParams(decodeURIComponent(inputs.serialize()), /sttv_/gi));
    }
});
// END Checkout form handlers //

// ########################## //

// BEGIN Contact form handler //
(0, _jquery2.default)('form#sttv_contact').on('submit', function (e) {
    e.preventDefault();
    var loading = (0, _jquery2.default)('.loading_overlay', (0, _jquery2.default)(this).parent()).html('<img src="' + _st.resources.content + '/i/sttv-spinner.gif" alt="Loading..." />');

    loading.fadeIn(250);

    _st.request({
        route: '/contact',
        method: 'POST',
        cdata: {
            g_recaptcha_response: grecaptcha.getResponse(),
            sttv_contact_name: this.sttv_contact_name.value,
            sttv_contact_email: this.sttv_contact_email.value,
            sttv_contact_subject: this.sttv_contact_subject.value,
            sttv_contact_message: this.sttv_contact_message.value
        },
        success: function success(data) {
            console.log(data);
            if (data.sent) {
                loading.empty().html('<p class="sblock"><strong><i class="material-icons">done</i></strong></p>').fadeIn(250);
                var s = (0, _jquery2.default)('.sblock');
                var p = (0, _jquery2.default)('<p/>', { "class": "smessage" });
                p.appendTo(s).append(data.message);
                (0, _jquery2.default)('.sblock').hide().fadeIn(250);
            } else {
                (0, _jquery2.default)('.message').html(data.message);
                loading.fadeOut(250);
            }
        },
        error: function error(x) {
            (0, _jquery2.default)('.message').html('Something went wrong. Please refresh the page and try again.');
            loading.fadeOut(250);
            console.log(x);
        }
    });
});
// END Contact form handler //

// ########################## //

// BEGIN Login form handler //
(0, _jquery2.default)(document).on('submit', 'form#sttv_login_form', function (e) {
    e.preventDefault();
    if (0 === (0, _jquery2.default)('#sttv_user').val().length) {
        (0, _jquery2.default)('.message').html('Username is required');
        return;
    }

    var loader = '<img src="' + _st.resources.content + '/i/sttv-spinner.gif" alt="Loading..." />',
        ld = (0, _jquery2.default)('.loading_overlay');
    ld.append(loader).promise().done(function () {
        (0, _jquery2.default)(this).fadeIn(250);
    });

    _st.request({
        route: '/auth?action=login',
        method: 'POST',
        headers: {
            'X-STTV-Auth': btoa(this.sttv_user.value + ':' + this.sttv_pass.value)
        },
        success: function success(data) {
            if (data.code == 'login_success') {
                ld.empty().html('<p class="sblock"><strong><i class="material-icons">done</i></strong></p>').fadeIn(250);
                (0, _jquery2.default)('.sblock').hide().fadeIn(250);
                setTimeout(function () {
                    window.location.href = data.redirect;
                }, 250);
            }
        },
        error: function error(x) {
            var data = x[0].responseJSON,
                msg = typeof data.errors.too_many_retries !== 'undefined' ? data.errors.too_many_retries[0] : data.message;

            (0, _jquery2.default)('.message').html(msg);
            ld.fadeOut(250);
            console.log(data);
        }
    });
});
// END Login form handler //

// ########################## //

// BEGIN Menu toggle handler //
(0, _jquery2.default)(document).on('click', '.slide-bar', function (e) {
    e.preventDefault();
    _st.menuToggle();
});
// END Menu toggle handler //

// ########################## //

// BEGIN Modal window handler
var selectors = '.st-dismiss, .mu-signup, .mu-submitter, .cart-fab, .payment-launcher';
(0, _jquery2.default)(document).on('click', selectors, function (e) {
    e.preventDefault();
    var t = (0, _jquery2.default)(this),
        c = t.attr('class').split(/\s+/),
        tda = t.attr('data-action');

    var f = {
        'mu-signup': 'mu-signup',
        'payment-launcher': 'checkout',
        'st-dismiss': 'close',
        'mu-submitter': 'mu-checkout',
        'cart-fab': 'sttv-cart'
    };

    c.some(function (v) {
        typeof f[v] !== 'undefined' && _st.modal.init(f[v]);
    });
});
// END Modal window handler //

// ########################## //

// BEGIN 'Read More' mobile button handler //
(0, _jquery2.default)(document).on('click', '.read-more', function (e) {
    e.preventDefault();
    (0, _jquery2.default)(this).parent().css({ 'display': 'none' });
    (0, _jquery2.default)('#content-wrapper').css({ 'max-height': 'none' });
});
// END 'Read More' mobile button handler //

// ########################## //

// BEGIN click scroll handler //
(0, _jquery2.default)(document).on('click', '.st-scroll', function (e) {
    e.preventDefault();
    _st.scroll(e.target.getAttribute('href'));
});
// END click scroll handler //

// ########################## //

// BEGIN Mailinglist Subscribe form handler //
(0, _jquery2.default)('#subscribe_page_mc').on('submit', function (e) {
    e.preventDefault();
    var form = (0, _jquery2.default)(this);

    var loading = (0, _jquery2.default)('.loading_overlay', (0, _jquery2.default)(this).parent()).html('<img src="' + _st.resources.content + '/i/sttv-spinner.gif" alt="Loading..." />');

    loading.fadeIn(250);

    var fields = {
        fname: (0, _jquery2.default)('#sttv_mc_fname', form).val(),
        lname: (0, _jquery2.default)('#sttv_mc_lname', form).val(),
        email: (0, _jquery2.default)('#sttv_mc_email', form).val(),
        g_recaptcha_response: grecaptcha.getResponse()
    };

    _st.request({
        route: '/subscribe',
        method: 'POST',
        cdata: fields,
        success: function success(d) {
            (0, _jquery2.default)('input, button', form).prop('disabled', true);
            grecaptcha.reset();
            loading.empty().html('<p class="sblock"><strong><i class="material-icons">done</i></strong></p>').fadeIn(250);
            var s = (0, _jquery2.default)('.sblock');
            var p = (0, _jquery2.default)('<p/>', { "class": "smessage" });
            p.appendTo(s).append(d.message);
            (0, _jquery2.default)('.sblock').hide().fadeIn(250);
            console.log(d);
        },
        error: function error(x) {
            (0, _jquery2.default)('.message', form).html('Something went wrong. Please refresh the page and try again.');
            loading.fadeOut(250);
            console.log(x);
        }
    });
});
// END Mailinglist Subscribe form handler //

/***/ }),
/* 15 */
/***/ (function(module, exports) {

module.exports = jQuery;

/***/ })
/******/ ]);